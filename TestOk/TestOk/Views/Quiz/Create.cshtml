@model DataAccess.DTO.QuizDto

@{
    ViewData["Title"] = "Create";
}

@using (Html.BeginCollectionItem("quizes"))
{
	<li class="list-group-item quizRow">
		<div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        <div class="form-group">
			<label asp-for="Question" class="control-label"></label>
            <input asp-for="Question" class="form-control" />
			<span asp-validation-for="Question" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="PointsPerCorrectAnswer" class="control-label"></label>
			<input asp-for="PointsPerCorrectAnswer" type="number" class="form-control" />
			<span asp-validation-for="PointsPerCorrectAnswer" class="text-danger"></span>
		</div>
		<div class="form-group">
			<label asp-for="Complexity" class="control-label"></label>
			<input asp-for="Complexity" type="number" class="form-control" />
			<span asp-validation-for="Complexity" class="text-danger"></span>
		</div>
		<div class="w-100">
			<hr>
		</div>
		<div class="text-center mt-2">
			<h5>Options</h5>
            <div id="quizOptions" class="mt-2">
                @foreach (var quizOption in Model.Options) {
                    Html.RenderPartial("../QuizOption/Create", quizOption); 
                }
            </div>
		</div>
		<div class="text-center mt-3">
			<button id="addQuizOption" type="button" class="btn btn-secondary btn-sm addQuizOption">
				Add Option
			</button>
		</div>
		<div class="w-100 MT-2">
			<hr>
		</div>
		<button class="btn btn-danger deleteQuiz mt-5 btn-sm">Remove</button>
	</li>
}

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}